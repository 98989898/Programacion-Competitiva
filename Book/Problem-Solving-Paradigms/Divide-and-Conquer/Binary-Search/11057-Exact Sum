import java.io.*;
import java.util.*;
import java.math.*;
import java.text.*;
import java.lang.*;

class Main {
	static int[] numbers;
	static int number;
	public static void main(String[] args) throws Exception {
		
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		PrintWriter pr = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
		String line = br.readLine();
		while (line!=null&&!line.isEmpty()) {
			number = Integer.parseInt(line);
			line = br.readLine();
			String[] split = line.split(" ");
			numbers = new int[number];
			for (int i = 0 ; i < number ;i++) {
				numbers[i]=Integer.parseInt(split[i]);
			}
			line = br.readLine();
			int price = Integer.parseInt(line);
			Arrays.sort(numbers);
			int price1=-1;
			int price2=-1;
			for (int i = 0; i < number ;i++) {
				int found = binary(price-numbers[i],numbers[i],i);
				if (found>=0) {
					if (price1<0) {
						price1=numbers[i];
						price2=numbers[found];
					} else {
						if (Math.abs(price2-price1)>Math.abs(numbers[i]-numbers[found])) {
							price1=numbers[i];
							price2=numbers[found];
						}
					}
				}
			}
			if (price1>price2) {
				int temp=price1;
				price1=price2;
				price2=temp;
			} 
			br.readLine();
			line = br.readLine();
			pr.println("Peter should buy books whose prices are "+price1+" and "+price2+".");
			pr.println();
		}
		
		pr.close();
	}
	static int binary(int search,int currval, int currindex){
		if (search==currval) {
			if (currindex+1<number&&numbers[currindex+1]==currval) {
				return (currindex+1);
			}
			if (currindex>0&&numbers[currindex-1]==currval) {
				return (currindex-1);
			}
			return -1;
		}
		
		int low = 0;
		int high = number - 1;
		
		if (search<currval) {
			high=currindex-1;
		} else {
			low=currindex+1;
		}
		
		while (low<=high) {
			int mid = (high + low)/2;
			if (numbers[mid]==search) {
				return mid;
			}
			if (numbers[mid]<search) {
				low = mid + 1;
			} else {
				high = mid -1;
			}
		}
		return -1;
	}
}
